# ==========================
# fma_rawfield.py input file
# Date: 2015-01-08
# Accelerator Physics LNLS
# ==========================

# --- Summary ---
#
# This is the input file for trajectory calculation based on a given
# fieldmap which is performed with the script 'fma_trajectory.py'
# A controllable fixed-size Runge-Kutta algorithm is used to integrate
# the equantions of motion of a single electron in the presence of
# the magnetic field as defined in the fieldmap.
#
# The implemented equations of motion are not approximated. Provided
# a sufficiently fine RK step is chosen, this scripts may be used to
# accurately obtain the trajectory of the electron with arbitrary energy
#
# Runge-kutta algorithm used for the integration of the eqs. of motion needs to know
# what to do when trajectory reachs the fieldmap bounds. It will either extrapolate the field
# along the longitudinal (z) direction or consider it to have vanished. 
# As for the transverse directions (x and y), the RK algorithm will 
# generate exceptions.


# --- Input parameters ---

# each analysis has an identity label used for naming output files

  config_label             'bc_model2_controlgap_50mm_modelo_mecanico'


# beam energy

  beam_energy                     3.0                           # [GeV]


# A trajectory can also be read from file. This is useful when the fieldmap of
# 3D models with errors are being analysed. In this case we want to use as reference
# trajectory a trajectory that was calculated from the 3D model without errors and
# saved to file. If parameter 'traj_load_filename' is set to 'None' then a new
# refernence trajectory with be calculated with RK on the given fieldmap.

  traj_load_filename              None 


# If parameter 'traj_is_reference_traj' is set to True the algorithm will rescale the
# fieldmap so that the total trajectory deflection will exactly match the nominal deflection

  traj_is_reference_traj          False
  model_nominal_angle             1.4                           # [deg] model nominal deflection angle of the magnet

# There is the option to restrain the trajectory to the midplane (y = 0 mm) of the magnet 

  traj_force_midplane_flag        True


# There is the option to serach for a initial rx position that will result in a trajectory that
# is centered in the good-field region of the magnet (around rx == 0)

  traj_center_sagitta_flag        True


# The RK algorithm always integrates the trajectory from the center of the magnet (z = s = 0 mm) 
# The limits of the RK integration may be specified in various ways:
# If only 'traj_rk_s_step' is given then the algorithm will integrate until
# the z coordinate of the particle reaches the fieldmap bound.

  traj_init_rx                    None                          # [mm] init_rx at z = s = 0 mm (center of magnet)
  traj_rk_s_step                  1.0                           # [mm]
  traj_rk_length                  None                          # [mm]
  traj_rk_nrpts                   None 


# whether to save trajectory to an ASCII file

  traj_save                       True
